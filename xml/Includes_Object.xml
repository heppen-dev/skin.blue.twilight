<?xml version="1.0" encoding="UTF-8"?>
<includes>
  <include name="Object_Submenu_Content">
    <control type="fixedlist" id="9001">
      <nested/>
      <include content="submenuVerticalParams" condition="Skin.HasSetting(Vertical_Main)"/>
      <include content="submenuClassicParams" condition="Skin.HasSetting(Classic_Main)"/>
      <include content="submenuHorizontalParams" condition="Skin.HasSetting(Horizontal_Main)"/>
      <focusedlayout width="384" height="95">
        <control type="group">
          <visible>Control.HasFocus(9001)</visible>
          <control type="group">
            <control type="image">
              <left>0</left>
              <top>995</top>
              <width>384</width>
              <height>95</height>
              <texture colordiffuse="37FFFFFF">common/white.png</texture>
              <visible>Skin.HasSetting(Horizontal_Main)</visible>
            </control>
            <control type="label">
              <include content="submenuVerticalLabelLayout" condition="Skin.HasSetting(Vertical_Main)"/>
              <include content="submenuClassicLabelLayout" condition="Skin.HasSetting(Classic_Main)"/>
              <include content="submenuHorizontalLabelLayout" condition="Skin.HasSetting(Horizontal_Main)"/>
              <textcolor>dialog_fg_100</textcolor>
              <label>$PARAM[label]</label>
              <scroll>true</scroll>
              <shadowcolor>text_shadow</shadowcolor>
            </control>
            <visible>String.IsEqual(Skin.String(MenuStyle),IconsText) | String.IsEqual(Skin.String(MenuStyle),Text) | String.IsEmpty(Skin.String(MenuStyle))</visible>
          </control>
          <control type="group">
            <control type="image">
              <include content="submenuVerticalIconLayout" condition="Skin.HasSetting(Vertical_Main)"/>
              <include content="submenuClassicIconLayout" condition="Skin.HasSetting(Classic_Main) + !String.IsEqual(Skin.String(MenuStyle),Icons)"/>
              <include content="submenuClassicIconsOnlyLayout" condition="Skin.HasSetting(Classic_Main) + String.IsEqual(Skin.String(MenuStyle),Icons)"/>
              <texture colordiffuse="dialog_fg_100">$PARAM[icon]</texture>
            </control>
            <visible>!Skin.HasSetting(Horizontal_Main) + [String.IsEqual(Skin.String(MenuStyle),Icons) | String.IsEqual(Skin.String(MenuStyle),IconsText) | String.IsEmpty(Skin.String(MenuStyle))]</visible>
          </control>
        </control>
      </focusedlayout>
      <itemlayout width="384" height="95">
        <control type="group">
          <visible>Control.HasFocus(9001)</visible>
          <control type="group">
            <control type="image">
              <left>0</left>
              <top>995</top>
              <width>384</width>
              <height>95</height>
              <texture colordiffuse="44FFFFFF">common/white.png</texture>
              <visible>Skin.HasSetting(Horizontal_Main)</visible>
            </control>
            <control type="label">
              <label>$PARAM[label]</label>
              <shadowcolor>text_shadow</shadowcolor>
              <include content="submenuFont" condition="Skin.HasSetting(Vertical_Main) | Skin.HasSetting(Classic_Main)"/>
              <include content="submenuVerticalLabelLayout" condition="Skin.HasSetting(Vertical_Main)"/>
              <include content="submenuClassicLabelLayout" condition="Skin.HasSetting(Classic_Main)"/>
              <include content="submenuHorizontalLabelLayout" condition="Skin.HasSetting(Horizontal_Main)"/>
            </control>
            <visible>String.IsEqual(Skin.String(MenuStyle),IconsText) | String.IsEqual(Skin.String(MenuStyle),Text) | String.IsEmpty(Skin.String(MenuStyle))</visible>
          </control>
          <control type="group">
            <control type="image">
              <include content="submenuVerticalIconLayout" condition="Skin.HasSetting(Vertical_Main)"/>
              <include content="submenuClassicIconLayout" condition="Skin.HasSetting(Classic_Main) + !String.IsEqual(Skin.String(MenuStyle),Icons)"/>
              <include content="submenuClassicIconsOnlyLayout" condition="Skin.HasSetting(Classic_Main) + String.IsEqual(Skin.String(MenuStyle),Icons)"/>
              <texture colordiffuse="44FFFFFF">$PARAM[icon]</texture>
            </control>
            <visible>!Skin.HasSetting(Horizontal_Main) + [String.IsEqual(Skin.String(MenuStyle),Icons) | String.IsEqual(Skin.String(MenuStyle),IconsText) | String.IsEmpty(Skin.String(MenuStyle))]</visible>
          </control>
        </control>
      </itemlayout>
    </control>
  </include>
  <include name="Object_Widget_Label">
    <param name="top" default="0"/>
    <param name="font" default="font27_bold"/>
    <definition>
      <control type="group" id="$PARAM[groupid]">
        <top>$PARAM[top]</top>
        <height>52</height>
        <visible>Integer.IsGreater(Container($PARAM[id]).NumItems,0) | Container($PARAM[id]).IsUpdating</visible>
        <nested/>
        <control type="grouplist">
          <height>52</height>
          <orientation>horizontal</orientation>
          <usecontrolcoords>true</usecontrolcoords>
          <itemgap>10</itemgap>
          <control type="label">
            <top>20</top>
            <left>15</left>
            <width>auto</width>
            <label>$PARAM[label]</label>
            <aligny>center</aligny>
            <textcolor>dialog_fg_100</textcolor>
            <font>$PARAM[font]</font>
            <height>24</height>
            <visible>Integer.IsGreater(Container($PARAM[id]).NumItems,0) | Container($PARAM[id]).IsUpdating</visible>
            <visible>Control.HasFocus($PARAM[id]) | Control.HasFocus($PARAM[altid])</visible>
          </control>
          <control type="label">
            <top>3</top>
            <width>auto</width>
            <label> | </label>
            <aligny>center</aligny>
            <textcolor>$VAR[ColorHighlight]</textcolor>
            <font>font37</font>
            <visible>Control.HasFocus($PARAM[id]) | Control.HasFocus($PARAM[altid])</visible>
            <visible>Integer.IsGreater(Container($PARAM[id]).NumItems,0) + !Container($PARAM[id]).IsUpdating</visible>
            <visible>String.StartsWith(ListItem.FolderPath,pvr://)</visible>
          </control>
          <control type="group">
            <top>24</top>
            <include content="ProgressGradient">
              <param name="id" value="29999"/>
              <param name="top" value="0"/>
              <width>480</width>
              <height>16</height>
              <info>ListItem.Progress</info>
            </include>
            <visible>Control.HasFocus($PARAM[id]) | Control.HasFocus($PARAM[altid])</visible>
            <visible>Integer.IsGreater(Container($PARAM[id]).NumItems,0) + !Container($PARAM[id]).IsUpdating</visible>
            <visible>String.StartsWith(ListItem.FolderPath,pvr://)</visible>
          </control>
          <control type="group">
            <include>SmallBusySpinner</include>
            <top>10</top>
            <left>18</left>
            <visible>Container($PARAM[id]).IsUpdating</visible>
            <visible>Control.HasFocus($PARAM[id])</visible>
          </control>
        </control>
      </control>
    </definition>
  </include>
  <include name="Object_WidgetHorizontal_Label">
    <param name="top" default="0"/>
    <definition>
      <control type="group" id="$PARAM[groupid]">
        <top>$PARAM[top]</top>
        <height>52</height>
        <width>$PARAM[width]</width>
        <visible>Integer.IsGreater(Container($PARAM[id]).NumItems,0) | Container($PARAM[id]).IsUpdating</visible>
        <nested/>
        <control type="grouplist">
          <height>52</height>
          <orientation>horizontal</orientation>
          <usecontrolcoords>true</usecontrolcoords>
          <itemgap>22</itemgap>
          <control type="group">
            <include>SmallBusySpinner</include>
            <left>18</left>
            <visible>Container($PARAM[id]).IsUpdating</visible>
            <visible>Control.HasFocus($PARAM[id])</visible>
          </control>
          <control type="label">
            <top>0</top>
            <left>0</left>
            <width>$PARAM[width]</width>
            <label>$PARAM[label]</label>
            <aligny>center</aligny>
            <textcolor>dialog_fg_100</textcolor>
            <font>font27_bold</font>
            <height>42</height>
            <!-- <scroll>true</scroll> -->
            <visible>Integer.IsGreater(Container($PARAM[id]).NumItems,0) | Container($PARAM[id]).IsUpdating</visible>
            <visible>Control.HasFocus($PARAM[id]) | Control.HasFocus($PARAM[altid])</visible>
          </control>
        </control>
      </control>
    </definition>
  </include>
  <include name="Object_Widget_Content_SearchList">
    <param name="controltype" default="list"/>
    <param name="id" default=""/>
    <param name="target" default=""/>
    <param name="sortby" default=""/>
    <param name="sortdirection" default=""/>
    <param name="limit" default=""/>
    <param name="path" default=""/>
    <param name="postercondition" default="!String.IsEmpty(Container(302).ListItem.Property(widgetPath)) + String.IsEqual(Container(302).ListItem.Property(widgetAspect),Poster)] | [String.IsEmpty(Container(302).ListItem.Property(widgetPath)) + String.IsEqual(Container(301).ListItem.Property(widgetAspect),Poster)]"/>
    <param name="squarecondition" default="!String.IsEmpty(Container(302).ListItem.Property(widgetPath)) + String.IsEqual(Container(302).ListItem.Property(widgetAspect),Square)] | [String.IsEmpty(Container(302).ListItem.Property(widgetPath)) + String.IsEqual(Container(301).ListItem.Property(widgetAspect),Square)]"/>
    <param name="landscapecondition" default="!String.IsEmpty(Container(302).ListItem.Property(widgetPath)) + String.IsEqual(Container(302).ListItem.Property(widgetAspect),Landscape)] | [String.IsEmpty(Container(302).ListItem.Property(widgetPath)) + String.IsEqual(Container(301).ListItem.Property(widgetAspect),Landscape)]"/>
    <param name="fanartcondition" default="!String.IsEmpty(Container(302).ListItem.Property(widgetPath)) + String.IsEqual(Container(302).ListItem.Property(widgetAspect),Fanart)] | [String.IsEmpty(Container(302).ListItem.Property(widgetPath)) + String.IsEqual(Container(301).ListItem.Property(widgetAspect),Fanart)]"/>
    <definition>
      <control type="$PARAM[controltype]" id="$PARAM[id]">
        <nested/>
        <onfocus>SetProperty(widgetNameLabel,$PARAM[label],home)</onfocus>
        <onfocus>SetProperty(widgetMovementId,$PARAM[id],home)</onfocus>
        <orientation>horizontal</orientation>
        <height>460</height>
        <animation effect="fade" start="100" end="0" time="300" reversible="true" easing="inout" condition="Integer.IsGreater(Window(home).Property(widgetMovementId),$PARAM[id])">Conditional</animation>
        <!-- Posters aspect ratio -->
        <itemlayout height="382.5" width="270" condition="$PARAM[postercondition]">
          <include content="ViewPosterItemLayout" />
          <include content="View_WatchedOverlay">
            <param name="bottom" value="-25"/>
            <param name="right" value="44"/>
            <param name="visible" value="false"/>
          </include>
        </itemlayout>
        <focusedlayout height="382.5" width="270" condition="$PARAM[postercondition]">
          <include content="ViewPosterItemLayout">
          </include>
          <include content="Selectbox">
            <param name="pad_top_b" value="-15"/>
            <param name="pad_bottom_b" value="-22"/>
            <param name="pad_left_b" value="-15"/>
            <param name="pad_right_b" value="-5"/>
            <param name="pad_top_t" value="-10"/>
            <param name="pad_bottom_t" value="-16"/>
            <param name="pad_left_t" value="-10"/>
            <param name="pad_right_t" value="0"/>
            <param name="visible_posters" value="$PARAM[postercondition] + Control.HasFocus($PARAM[id])"/>
            <param name="visible_squares" value="false"/>
            <param name="visible_landscapes" value="false"/>
          </include>
          <include content="View_WatchedOverlay">
            <param name="bottom" value="-25"/>
            <param name="right" value="44"/>
            <param name="visible" value="$PARAM[postercondition] + Control.HasFocus($PARAM[id])"/>
          </include>
        </focusedlayout>
        <!-- Square aspect ratio -->
        <itemlayout height="382.5" width="360" condition="$PARAM[squarecondition]">
          <include content="ViewSquareItemLayout">
          </include>
          <include content="View_WatchedOverlay">
            <param name="bottom" value="-25"/>
            <param name="right" value="72"/>
            <param name="visible" value="false"/>
          </include>
        </itemlayout>
        <focusedlayout height="382.5" width="360" condition="$PARAM[squarecondition]">
          <include content="ViewSquareItemLayout">
          </include>
          <include content="Selectbox">
            <param name="pad_top_b" value="-15"/>
            <param name="pad_bottom_b" value="-23"/>
            <param name="pad_left_b" value="-15"/>
            <param name="pad_right_b" value="17"/>
            <param name="pad_top_t" value="-8"/>
            <param name="pad_bottom_t" value="-18"/>
            <param name="pad_left_t" value="-10"/>
            <param name="pad_right_t" value="22"/>
            <param name="visible_posters" value="false"/>
            <param name="visible_squares" value="$PARAM[squarecondition] + Control.HasFocus($PARAM[id])"/>
            <param name="visible_landscapes" value="false"/>
          </include>
          <include content="View_WatchedOverlay">
            <param name="bottom" value="-25"/>
            <param name="right" value="72"/>
            <param name="visible" value="$PARAM[squarecondition] + Control.HasFocus($PARAM[id])"/>
          </include>
        </focusedlayout>
        <!-- Landscape aspect ratio -->
        <itemlayout height="375.5" width="600" condition="$PARAM[landscapecondition]">
          <include content="ViewLandscapeItemLayout">
            <param name="clearlogo" value="[!String.IsEmpty(ListItem.Art(clearlogo)) | !String.IsEmpty(ListItem.Art(tvshow.clearlogo))] + [[String.IsEmpty(ListItem.Art(landscape)) + String.IsEmpty(ListItem.Art(tvshow.landscape))] | [[!String.IsEmpty(ListItem.Art(tvshow.landscape)) | !String.IsEmpty(ListItem.Art(landscape))] + !Skin.HasSetting(LandscapeArt)] | [!String.IsEmpty(ListItem.Art(thumb)) + [String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,video)] + String.IsEmpty(ListItem.Property(airday))]]"/>
          </include>
          <include content="View_WatchedOverlay">
            <param name="bottom" value="18"/>
            <param name="right" value="72"/>
            <param name="visible" value="false"/>
          </include>
        </itemlayout>
        <focusedlayout height="375.5" width="600" condition="$PARAM[landscapecondition]">
          <include content="ViewLandscapeItemLayout">
            <param name="clearlogo" value="[!String.IsEmpty(ListItem.Art(clearlogo)) | !String.IsEmpty(ListItem.Art(tvshow.clearlogo))] + [[String.IsEmpty(ListItem.Art(landscape)) + String.IsEmpty(ListItem.Art(tvshow.landscape))] | [[!String.IsEmpty(ListItem.Art(tvshow.landscape)) | !String.IsEmpty(ListItem.Art(landscape))] + !Skin.HasSetting(LandscapeArt)] | [!String.IsEmpty(ListItem.Art(thumb)) + [String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,video)] + String.IsEmpty(ListItem.Property(airday))]]"/>
          </include>
          <include content="Selectbox">
            <param name="pad_top_b" value="-8"/>
            <param name="pad_bottom_b" value="18"/>
            <param name="pad_left_b" value="-8"/>
            <param name="pad_right_b" value="10"/>
            <param name="pad_top_t" value="-3"/>
            <param name="pad_bottom_t" value="23"/>
            <param name="pad_left_t" value="-3"/>
            <param name="pad_right_t" value="15"/>
            <param name="visible_posters" value="false"/>
            <param name="visible_squares" value="false"/>
            <param name="visible_landscapes" value="$PARAM[landscapecondition] + Control.HasFocus($PARAM[id])"/>
          </include>
          <include content="View_WatchedOverlay">
            <param name="bottom" value="18"/>
            <param name="right" value="72"/>
            <param name="visible" value="$PARAM[landscapecondition] + Control.HasFocus($PARAM[id])"/>
          </include>
        </focusedlayout>
        <!-- Fanart aspect ratio -->
        <itemlayout height="375.5" width="600" condition="$PARAM[fanartcondition]">
          <include content="ViewFanartItemLayout">
            <param name="clearlogo" value="[!String.IsEmpty(ListItem.Art(clearlogo)) | !String.IsEmpty(ListItem.Art(tvshow.clearlogo))] + [[String.IsEmpty(ListItem.Art(landscape)) + String.IsEmpty(ListItem.Art(tvshow.landscape))] | [[!String.IsEmpty(ListItem.Art(tvshow.landscape)) | !String.IsEmpty(ListItem.Art(landscape))] + !Skin.HasSetting(LandscapeArt)] | [!String.IsEmpty(ListItem.Art(thumb)) + [String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,video)] + String.IsEmpty(ListItem.Property(airday))]]"/>
          </include>
          <include content="View_WatchedOverlay">
            <param name="bottom" value="18"/>
            <param name="right" value="72"/>
            <param name="visible" value="false"/>
          </include>
        </itemlayout>
        <focusedlayout height="375.5" width="600" condition="$PARAM[fanartcondition]">
          <include content="ViewFanartItemLayout">
            <param name="clearlogo" value="[!String.IsEmpty(ListItem.Art(clearlogo)) | !String.IsEmpty(ListItem.Art(tvshow.clearlogo))] + [[String.IsEmpty(ListItem.Art(landscape)) + String.IsEmpty(ListItem.Art(tvshow.landscape))] | [[!String.IsEmpty(ListItem.Art(tvshow.landscape)) | !String.IsEmpty(ListItem.Art(landscape))] + !Skin.HasSetting(LandscapeArt)] | [!String.IsEmpty(ListItem.Art(thumb)) + [String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,video)] + String.IsEmpty(ListItem.Property(airday))]]"/>
          </include>
          <include content="Selectbox">
            <param name="pad_top_b" value="-8"/>
            <param name="pad_bottom_b" value="18"/>
            <param name="pad_left_b" value="-8"/>
            <param name="pad_right_b" value="10"/>
            <param name="pad_top_t" value="-3"/>
            <param name="pad_bottom_t" value="23"/>
            <param name="pad_left_t" value="-3"/>
            <param name="pad_right_t" value="15"/>
            <param name="visible_posters" value="false"/>
            <param name="visible_squares" value="false"/>
            <param name="visible_landscapes" value="$PARAM[fanartcondition] + Control.HasFocus($PARAM[id])"/>
          </include>
          <include content="View_WatchedOverlay">
            <param name="bottom" value="18"/>
            <param name="right" value="72"/>
            <param name="visible" value="$PARAM[fanartcondition] + Control.HasFocus($PARAM[id])"/>
          </include>
        </focusedlayout>
        <include content="Object_Widget_Content_Path">
          <param name="target" value="$PARAM[target]"/>
          <param name="sortby" value="$PARAM[sortby]"/>
          <param name="sortdirection" value="$PARAM[sortdirection]"/>
          <param name="limit" value="$PARAM[limit]"/>
          <param name="path" value="$PARAM[path]"/>
        </include>
      </control>
    </definition>
  </include>
  <include name="Object_WidgetsWall_Content">
    <param name="id" default="5610"/>
    <param name="target" default=""/>
    <param name="sortby" default=""/>
    <param name="sortdirection" default=""/>
    <param name="limit" default=""/>
    <param name="path" default=""/>
    <param name="landscapecondition" default="true"/>
    <definition>
      <control type="fixedlist" id="$PARAM[id]">
        <nested/>
        <orientation>horizontal</orientation>
        <height>195</height>
        <focusposition>3</focusposition>
        <animation effect="slide" time="0" start="0" end="-120,0" reversible="true" condition="true">Conditional</animation>
        <!-- movement -->
        <include content="Animation_Widget_Slide">
          <param name="container" value="3000" />
        </include>
        <onfocus>SetProperty(TMDbHelper.WidgetContainer,$PARAM[id],home)</onfocus>
        <onfocus>SetProperty(widgetMovementId,$PARAM[id],home)</onfocus>
        <animation effect="fade" start="100" end="0" time="0" reversible="true" condition="Integer.IsGreater(Window(home).Property(widgetMovementId),$PARAM[idtofade])">Conditional</animation>
        <!-- trailers -->
        <onclick condition="[String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE, tvshow)] + Control.HasFocus($PARAM[id]) + Skin.HasSetting(BackgroundPlayingTrailers) + !Player.HasVideo + !String.IsEmpty(ListItem.Trailer)">AlarmClock(trailerdelay,PlayMedia($ESCINFO[ListItem.Trailer],1),00:01,silent)</onclick>
        <onclick condition="[String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE, tvshow)] + Control.HasFocus($PARAM[id]) + Skin.HasSetting(BackgroundPlayingTrailers) + !Player.HasVideo + String.IsEmpty(ListItem.Trailer) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Trailer))">AlarmClock(trailerdelay,PlayMedia($ESCINFO[Window(Home).Property(TMDbHelper.ListItem.Trailer)],1),00:01,silent)</onclick>
        <onclick condition="[[String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE, tvshow)] + Skin.HasSetting(BackgroundPlayingTrailers) + String.IsEmpty(ListItem.Trailer) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Trailer))] + !Skin.HasSetting(DontShowNotificationANT)">Notification($LOCALIZE[31389], $LOCALIZE[31390])</onclick>
        <onclick condition="[String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE, tvshow)] + Control.HasFocus($PARAM[id]) + Skin.HasSetting(BackgroundPlayingTrailers) + !Player.HasVideo + !String.IsEmpty(ListItem.Trailer)">SetProperty(hasTrailer,true,home)</onclick>
        <onclick condition="[String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE, tvshow)] + Control.HasFocus($PARAM[id]) + Skin.HasSetting(BackgroundPlayingTrailers) + !Player.HasVideo + String.IsEmpty(ListItem.Trailer) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Trailer))">SetProperty(hasTrailer,true,home)</onclick>
        <!-- flix spotlight -->
        <include content="Flix_Spotlight_Properties">
          <param name="include_condition" value="!String.StartsWith(ListItem.FolderPath,favourites://) + !String.IsEqual(Listitem.DBTYPE,music) + !String.IsEqual(Listitem.DBTYPE,song) + !String.IsEqual(Listitem.DBTYPE,album) + !String.IsEqual(Listitem.DBTYPE,artist)" />
        </include>
        <onclick condition="!String.StartsWith(ListItem.FolderPath,favourites://) + !String.IsEqual(Listitem.DBTYPE,song) + !String.IsEqual(Listitem.DBTYPE,album) + !String.IsEqual(Listitem.DBTYPE,artist)">SetFocus(6000)</onclick>
        <!-- Landscapes -->
        <itemlayout height="225" width="315" condition="$PARAM[landscapecondition]">
          <include content="ViewLandscapeItemLayout">
            <param name="firstrow_fade" value="Integer.IsGreater(Window(home).Property(widgetMovementId),$PARAM[id])" />
          </include>
        </itemlayout>
        <focusedlayout height="225" width="315" condition="$PARAM[landscapecondition]">
          <include content="ViewLandscapeItemLayout">
            <param name="firstrow_fade" value="Integer.IsGreater(Window(home).Property(widgetMovementId),$PARAM[id])" />
          </include>
          <include content="Selectbox">
            <param name="pad_top_b" value="0"/>
            <param name="pad_bottom_b" value="20"/>
            <param name="pad_left_b" value="-12"/>
            <param name="pad_right_b" value="-12"/>
            <param name="pad_top_t" value="-10"/>
            <param name="pad_bottom_t" value="-16"/>
            <param name="pad_left_t" value="-10"/>
            <param name="pad_right_t" value="0"/>
            <param name="visible_posters" value="$PARAM[landscapecondition] + Control.HasFocus($PARAM[id])"/>
            <param name="visible_squares" value="false"/>
            <param name="visible_landscapes" value="false"/>
          </include>
          <control type="button">
            <include>HiddenObject</include>
            <onfocus condition="ListItem.IsFolder">SetProperty(spotlight_isFolder,true,home)</onfocus>
            <onfocus condition="ListItem.IsCollection">SetProperty(spotlight_isCollection,true,home)</onfocus>
            <onfocus condition="!ListItem.IsFolder">ClearProperty(spotlight_isFolder)</onfocus>
            <onfocus condition="!ListItem.IsCollection">ClearProperty(spotlight_isCollection)</onfocus>
            <onfocus>SetProperty(spotlight_Title,$INFO[ListItem.Title],home)</onfocus>
          </control>
        </focusedlayout>
        <include content="Object_Widget_Content_Path">
          <param name="target" value="$PARAM[target]"/>
          <param name="sortby" value="$PARAM[sortby]"/>
          <param name="sortdirection" value="$PARAM[sortdirection]"/>
          <param name="limit" value="$PARAM[limit]"/>
          <param name="path" value="$PARAM[path]"/>
        </include>
      </control>
    </definition>
  </include>
  <include name="Object_LocalWidget_Content">
    <param name="id" default="5610"/>
    <param name="target" default=""/>
    <param name="sortby" default=""/>
    <param name="sortdirection" default=""/>
    <param name="limit" default=""/>
    <param name="path" default=""/>
    <param name="postercondition" default="true"/>
    <definition>
      <control type="fixedlist" id="$PARAM[id]">
        <nested/>
        <orientation>horizontal</orientation>
        <onleft>noop</onleft>
        <onright>noop</onright>
        <onup>9000</onup>
        <onback>9000</onback>
        <width>2800</width>
        <height>220</height>
        <focusposition>1</focusposition>
        <onfocus>SetProperty(TMDbHelper.WidgetContainer,$PARAM[id],home)</onfocus>
        <!-- trailers -->
        <onclick condition="[String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE, tvshow)] + Control.HasFocus($PARAM[id]) + Skin.HasSetting(BackgroundPlayingTrailers) + !Player.HasVideo + !String.IsEmpty(ListItem.Trailer)">AlarmClock(trailerdelay,PlayMedia($ESCINFO[ListItem.Trailer],1),00:01,silent)</onclick>
        <onclick condition="[String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE, tvshow)] + Control.HasFocus($PARAM[id]) + Skin.HasSetting(BackgroundPlayingTrailers) + !Player.HasVideo + String.IsEmpty(ListItem.Trailer) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Trailer))">AlarmClock(trailerdelay,PlayMedia($ESCINFO[Window(Home).Property(TMDbHelper.ListItem.Trailer)],1),00:01,silent)</onclick>
        <onclick condition="[[String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE, tvshow)] + Skin.HasSetting(BackgroundPlayingTrailers) + String.IsEmpty(ListItem.Trailer) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Trailer))] + !Skin.HasSetting(DontShowNotificationANT)">Notification($LOCALIZE[31389], $LOCALIZE[31390])</onclick>
        <onclick condition="[String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE, tvshow)] + Control.HasFocus($PARAM[id]) + Skin.HasSetting(BackgroundPlayingTrailers) + !Player.HasVideo + !String.IsEmpty(ListItem.Trailer)">SetProperty(hasTrailer,true,home)</onclick>
        <onclick condition="[String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE, tvshow)] + Control.HasFocus($PARAM[id]) + Skin.HasSetting(BackgroundPlayingTrailers) + !Player.HasVideo + String.IsEmpty(ListItem.Trailer) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Trailer))">SetProperty(hasTrailer,true,home)</onclick>
        <!-- flix spotlight -->
        <include content="Flix_Spotlight_Properties">
          <param name="include_condition" value="!String.StartsWith(ListItem.FolderPath,favourites://) + !String.IsEqual(Listitem.DBTYPE,music) + !String.IsEqual(Listitem.DBTYPE,song) + !String.IsEqual(Listitem.DBTYPE,album) + !String.IsEqual(Listitem.DBTYPE,artist)" />
        </include>
        <onclick condition="String.StartsWith(ListItem.FolderPath,pvr://)">SetProperty(pvrWidget,true,home)</onclick>
        <onclick condition="!String.StartsWith(ListItem.FolderPath,favourites://) + !String.IsEqual(Listitem.DBTYPE,song) + !String.IsEqual(Listitem.DBTYPE,album) + !String.IsEqual(Listitem.DBTYPE,artist)">SetProperty(activateSpotlight,true,home)</onclick>
        <onclick condition="!String.StartsWith(ListItem.FolderPath,favourites://) + !String.IsEqual(Listitem.DBTYPE,song) + !String.IsEqual(Listitem.DBTYPE,album) + !String.IsEqual(Listitem.DBTYPE,artist)">SetFocus(6000)</onclick>
        <itemlayout height="185" width="1120" condition="$PARAM[postercondition]">
          <include content="ViewBannerItemLayout">
            <param name="bg_visible" value="false" />
          </include>
        </itemlayout>
        <focusedlayout height="185" width="1120" condition="$PARAM[postercondition]">
          <include content="ViewBannerItemLayout">
            <param name="bg_visible" value="true" />
          </include>
          <include content="Selectbox">
            <param name="pad_top_b" value="-15"/>
            <param name="pad_bottom_b" value="-25"/>
            <param name="pad_left_b" value="20"/>
            <param name="pad_right_b" value="60"/>
            <param name="pad_top_t" value="-10"/>
            <param name="pad_bottom_t" value="-16"/>
            <param name="pad_left_t" value="-10"/>
            <param name="pad_right_t" value="0"/>
            <param name="visible_posters" value="$PARAM[postercondition] + Control.HasFocus($PARAM[id])"/>
            <param name="visible_squares" value="false"/>
            <param name="visible_landscapes" value="false"/>
          </include>
        </focusedlayout>
        <include content="Object_Widget_Content_Path">
          <param name="target" value="$PARAM[target]"/>
          <param name="sortby" value="$PARAM[sortby]"/>
          <param name="sortdirection" value="$PARAM[sortdirection]"/>
          <param name="limit" value="$PARAM[limit]"/>
          <param name="path" value="$PARAM[path]"/>
        </include>
      </control>
    </definition>
  </include>
  <include name="Object_Widget_Content_Path">
    <content target="$PARAM[target]" sortby="$PARAM[sortby]" sortorder="$PARAM[sortdirection]" limit="$PARAM[limit]">$PARAM[path]</content>
  </include>
  <include name="Object_Item_Showcase">
    <param name="top" default="0"/>
    <param name="percentageinfo_line_top" default="200"/>
    <param name="mediaflags_line_top" default="250"/>
    <param name="videoinfo_line_top" default="460"/>
    <param name="plot_top" default="320"/>
    <param name="plot_height" default="125"/>
    <param name="title_top" default="70"/>
    <param name="title_visible" default="true" />
    <param name="clearlogo_top_margin" default="-940" />
    <param name="clearlogo_width" default="480" />
    <definition>
      <control type="group">
        <top>$PARAM[top]</top>
        <left>100</left>
        <visible>$PARAM[visible_condi]</visible>
        <control type="group">
          <top>60</top>
          <control type="label">
            <top>$PARAM[title_top]</top>
            <bottom>60</bottom>
            <scroll>false</scroll>
            <width>$PARAM[title_width]</width>
            <textcolor>$VAR[TitleColour]</textcolor>
            <shadowcolor>black</shadowcolor>
            <label>$PARAM[title]</label>
            <font>font_title</font>
            <visible>[[String.IsEmpty(ListItem.Art(clearlogo)) + String.IsEmpty(ListItem.Art(tvshow.clearlogo))] | Skin.HasSetting(DisableClearlogo)] + [!Control.HasFocus(9000) + !Control.HasFocus(9001) + !String.IsEqual(Container(9989).ListItemAbsolute(0).Property(list),Settings) + !String.IsEqual(Container(9989).ListItemAbsolute(0).Property(list),Weather)]</visible>
            <visible>$PARAM[title_visible]</visible>
          </control>
          <control type="image">
            <top>$PARAM[clearlogo_top_margin]</top>
            <width>$PARAM[clearlogo_width]</width>
            <aspectratio>keep</aspectratio>
            <texture background="true">$VAR[Image_ClearLogo]</texture>
            <visible>[!String.IsEmpty(ListItem.Art(clearlogo)) | !String.IsEmpty(ListItem.Art(tvshow.clearlogo))] + !Skin.HasSetting(DisableClearlogo)</visible>
          </control>
        </control>
        <control type="group">
          <top>$PARAM[percentageinfo_line_top]</top>
          <include content="Object_Info_First_Line">
            <param name="visible_condi" value="$PARAM[visible_condi] + !$EXP[flix_spotlight_level1]" />
          </include>
        </control>
        <control type="group">
          <top>$PARAM[mediaflags_line_top]</top>
          <include content="Object_Info_Line_MediaFlags">
            <param name="visible_infoline" value="$PARAM[visible_infoline]" />
          </include>
        </control>
        <control type="group">
          <top>$PARAM[videoinfo_line_top]</top>
          <include content="Object_Video_Info_Line">
            <param name="visible_infoline" value="$PARAM[visible_infoline]" />
          </include>
        </control>
        <control type="group">
          <control type="textbox">
            <top>$PARAM[plot_top]</top>
            <width>720</width>
            <height>$PARAM[plot_height]</height>
            <textcolor>white</textcolor>
            <label>$PARAM[plot]</label>
            <font>font_plot_normal</font>
            <shadowcolor>black</shadowcolor>
            <autoscroll delay="4000" time="4500" repeat="7000">Skin.HasSetting(autoscroll)</autoscroll>
            <visible>!Skin.HasSetting(HidePlot)</visible>
          </control>
        </control>
        <include content="CyclingInfo" condition="!Skin.HasSetting(HideInfoTag)">
          <param name="visible2" value="!String.IsEmpty(ListItem.Studio)"/>
          <param name="visible1" value="!String.IsEmpty(ListItem.Genre)"/>
          <param name="visible3" value="!String.IsEmpty(ListItem.Cast)"/>
        </include>
      </control>
    </definition>
  </include>
  <include name="CyclingInfo">
    <control type="group">
      <top>345</top>
      <left>150</left>
      <visible>ControlGroup(3000).HasFocus</visible>
      <visible>Skin.HasSetting(Vertical_Main)</visible>
      <animation type="Conditional" condition="Player.HasVideo + !Skin.HasSetting(DontHideShowcase)" reversible="false">
        <effect type="fade" start="100" end="0" time="300"/>
        <effect type="slide" start="0" end="-1400,0" time="600"/>
      </animation>
      <control type="group">
        <include>GenreCycle</include>
        <visible>$PARAM[visible1]</visible>
        <control type="image">
          <top>61</top>
          <width>64</width>
          <height>64</height>
          <texture background="true" colordiffuse="$VAR[ColorHighlight]">common/circle.png</texture>
          <visible>!String.IsEmpty(ListItem.Studio) | !String.IsEmpty(ListItem.Genre)</visible>
        </control>
        <control type="image">
          <top>69</top>
          <left>6</left>
          <width>54</width>
          <height>54</height>
          <texture colordiffuse="ff000000">indicator/genre2.png</texture>
          <visible>!String.IsEmpty(ListItem.Genre)</visible>
        </control>
        <control type="textbox">
          <top>45</top>
          <left>74</left>
          <width>680</width>
          <height>88</height>
          <aligny>center</aligny>
          <font>font32</font>
          <wrapmultiline>true</wrapmultiline>
          <label>$INFO[ListItem.Genre]</label>
          <visible>!String.IsEmpty(ListItem.Genre)</visible>
          <autoscroll delay="6000" time="4500" repeat="7000">!String.IsEmpty(ListItem.Genre) + Skin.HasSetting(autoscroll)</autoscroll>
        </control>
      </control>
      <control type="group">
        <include>StudioCycle</include>
        <visible>$PARAM[visible2]</visible>
        <top>-800</top>
        <control type="image">
          <top>61</top>
          <width>64</width>
          <height>64</height>
          <texture background="true" colordiffuse="$VAR[ColorHighlight]">common/circle.png</texture>
          <visible>!String.IsEmpty(ListItem.Studio) | !String.IsEmpty(ListItem.Genre)</visible>
        </control>
        <control type="image">
          <top>69</top>
          <left>8</left>
          <width>50</width>
          <height>50</height>
          <texture colordiffuse="ff000000">indicator/camp-chair.png</texture>
          <visible>!String.IsEmpty(ListItem.Studio)</visible>
        </control>
        <control type="textbox">
          <top>45</top>
          <left>74</left>
          <width>680</width>
          <height>88</height>
          <aligny>center</aligny>
          <font>font32</font>
          <wrapmultiline>true</wrapmultiline>
          <label>$INFO[ListItem.Studio]</label>
          <visible>!String.IsEmpty(ListItem.Studio)</visible>
          <autoscroll delay="12000" time="3000" repeat="7000">!String.IsEmpty(ListItem.Studio) + Skin.HasSetting(autoscroll)</autoscroll>
        </control>
      </control>
      <control type="group">
        <include>CastCycle</include>
        <visible>$PARAM[visible3]</visible>
        <top>-800</top>
        <control type="image">
          <top>61</top>
          <width>64</width>
          <height>64</height>
          <texture background="true" colordiffuse="$VAR[ColorHighlight]">common/circle.png</texture>
          <visible>!String.IsEmpty(ListItem.Studio) | !String.IsEmpty(ListItem.Genre) | !String.IsEmpty(ListItem.Cast)</visible>
        </control>
        <control type="image">
          <top>60</top>
          <left>0</left>
          <width>64</width>
          <height>64</height>
          <texture colordiffuse="ff000000">special://skin/extras/icons/actor.png</texture>
          <visible>!String.IsEmpty(ListItem.Cast)</visible>
        </control>
        <control type="textbox">
          <top>45</top>
          <left>74</left>
          <width>680</width>
          <height>88</height>
          <aligny>center</aligny>
          <font>font32</font>
          <wrapmultiline>true</wrapmultiline>
          <label>$INFO[ListItem.CastAndRole]</label>
          <visible>!String.IsEmpty(ListItem.CastAndRole)</visible>
          <autoscroll delay="12000" time="3000" repeat="7000">!String.IsEmpty(ListItem.CastAndRole) + Skin.HasSetting(autoscroll)</autoscroll>
        </control>
      </control>
    </control>
  </include>
  <include name="Object_Info_Line_Label">
    <param name="divider" default="true"/>
    <param name="visible" default="true"/>
    <param name="fallback" default=""/>
    <param name="font" default="font32"/>
    <param name="autoscroll" default="true"/>
    <definition>
      <control type="label">
        <width>auto</width>
        <label> | </label>
        <height>72</height>
        <aligny>bottom</aligny>
        <font>$PARAM[font]</font>
        <textcolor>$VAR[ColorHighlight]</textcolor>
        <visible>!String.IsEmpty(Control.GetLabel($PARAM[id]))</visible>
        <visible>$PARAM[divider]</visible>
        <visible>$PARAM[visible]</visible>
      </control>
      <control type="label" id="$PARAM[id]">
        <width>$PARAM[width]</width>
        <scroll>$PARAM[autoscroll]</scroll>
        <label fallback="$PARAM[fallback]">$PARAM[label]</label>
        <height>72</height>
        <top>$PARAM[top]</top>
        <left>$PARAM[left]</left>
        <aligny>bottom</aligny>
        <font>$PARAM[font]</font>
        <textcolor>$PARAM[textcolor]</textcolor>
        <shadowcolor>black</shadowcolor>
        <visible>$PARAM[visible]</visible>
      </control>
    </definition>
  </include>
  <include name="Object_Info_First_Line">
    <param name="label" default=""/>
    <param name="nextaired" default="true"/>
    <param name="textcolor" default="main_fg_100"/>
    <param name="container" default=""/>
    <param name="uid" default="661"/>
    <param name="green" default="ff27ae60"/>
    <param name="visible_infoline" default="!Container(7501).IsUpdating + [!Control.HasFocus(9000) + !Control.HasFocus(9001) + !Control.HasFocus(303)] + !String.StartsWith(ListItem.FolderPath,favourites://)" />
    <definition>
      <control type="grouplist">
        <height>48</height>
        <orientation>horizontal</orientation>
        <usecontrolcoords>true</usecontrolcoords>
        <itemgap>0</itemgap>
        <left>0</left>
        <right>0</right>
        <control type="group">
          <top>8</top>
          <left>0</left>
          <width>260</width>
          <control type="image">
            <top>0</top>
            <width>100%</width>
            <height>32</height>
            <aspectratio align="left">scale</aspectratio>
            <texture background="true" colordiffuse="ff0fafff">common/badge.png</texture>
            <visible>$PARAM[visible_condi]</visible>
          </control>
          <include content="Object_Info_Line_Label">
            <param name="label" value="$VAR[PercentageRating]% $LOCALIZE[31384]"/>
            <param name="font" value="font_tiny_hintlabel"/>
            <param name="textcolor" value="dialog_fg_100"/>
            <param name="divider" value="false"/>
            <param name="fallback" value="N/A"/>
            <param name="visible" value="$PARAM[visible_condi]"/>
            <param name="width" value="100%" />
            <param name="top" value="4" />
            <param name="left" value="12" />
          </include>
        </control>
        <control type="label" id="$PARAM[id]">
          <label fallback="N/A">$INFO[ListItem.Year]</label>
          <width>auto</width>
          <height>32</height>
          <top>12</top>
          <left>-48</left>
          <align>center</align>
          <font>font_tiny_hintlabel</font>
          <textcolor>dialog_fg_100</textcolor>
          <visible>!String.IsEmpty(ListItem.Year)</visible>
        </control>
        <control type="group">
          <top>-6</top>
          <left>0</left>
          <include>MediaFlags</include>
        </control>
      </control>
    </definition>
  </include>
  <include name="Object_Info_Line_MediaFlags">
    <param name="label" default=""/>
    <param name="nextaired" default="true"/>
    <param name="textcolor" default="main_fg_100"/>
    <param name="container" default=""/>
    <param name="uid" default="661"/>
    <param name="green" default="ff27ae60"/>
    <param name="visible_infoline" default="!String.IsEqual(Container(9989).ListItemAbsolute(0).Property(list),Settings) + !String.IsEqual(Container(9989).ListItemAbsolute(0).Property(list),Weather) + !Container(7502).IsUpdating + [!Control.HasFocus(9000) + !Control.HasFocus(9001) + !Control.HasFocus(303)] + !String.StartsWith(ListItem.FolderPath,favourites://)" />
    <definition>
      <control type="grouplist">
        <height>72</height>
        <orientation>horizontal</orientation>
        <usecontrolcoords>true</usecontrolcoords>
        <itemgap>0</itemgap>
        <left>0</left>
        <right>0</right>
        <control type="group">
          <width>1000</width>
          <include>MediaFlags_NewLine</include>
        </control>
      </control>
    </definition>
  </include>
  <include name="Object_Info_Line">
    <param name="label" default=""/>
    <param name="nextaired" default="true"/>
    <param name="textcolor" default="main_fg_100"/>
    <param name="container" default=""/>
    <param name="uid" default="661"/>
    <param name="green" default="ff27ae60"/>
    <param name="visible_infoline" default="!String.IsEqual(Container(9989).ListItemAbsolute(0).Property(list),Settings) + !String.IsEqual(Container(9989).ListItemAbsolute(0).Property(list),Weather) + !Container(7502).IsUpdating + [!Control.HasFocus(9000) + !Control.HasFocus(9001) + !Control.HasFocus(303)] + !String.StartsWith(ListItem.FolderPath,favourites://)" />
    <definition>
      <control type="grouplist">
        <height>72</height>
        <orientation>horizontal</orientation>
        <usecontrolcoords>true</usecontrolcoords>
        <itemgap>0</itemgap>
        <left>0</left>
        <right>0</right>
        <control type="image">
          <top>10</top>
          <width>37</width>
          <height>24</height>
          <aspectratio align="left">keep</aspectratio>
          <texture colordiffuse="$PARAM[textcolor]">$VAR[Image_VideoQuality]</texture>
          <visible>$PARAM[visible_infoline]</visible>
        </control>
        <include content="Object_Info_Line_Label">
          <param name="label" value="$VAR[Label_InfoLine]"/>
          <param name="textcolor" value="$VAR[ColorHighlight]"/>
          <param name="divider" value="false"/>
          <param name="visible" value="!Window.IsVisible(videoosd) + !Skin.HasSetting(Horizontal_Main)"/>
          <param name="width" value="1125" />
        </include>
        <include content="Object_Info_Line_Label">
          <param name="label" value="$VAR[Label_InfoLine]"/>
          <param name="visible" value="!Window.IsVisible(videoosd) + Skin.HasSetting(Horizontal_Main)"/>
          <param name="width" value="1125" />
        </include>
        <include content="Object_Info_Line_Label">
          <param name="label" value="$VAR[Label_OSD_InfoLine]"/>
          <param name="textcolor" value="$VAR[ColorHighlight]"/>
          <param name="divider" value="false"/>
          <param name="visible" value="Window.IsVisible(videoosd)"/>
          <param name="width" value="1200" />
        </include>
      </control>
    </definition>
  </include>
  <include name="Object_Video_Info_Line">
    <param name="label" default=""/>
    <param name="nextaired" default="true"/>
    <param name="textcolor" default="main_fg_100"/>
    <param name="container" default=""/>
    <param name="uid" default="661"/>
    <param name="green" default="ff27ae60"/>
    <param name="visible_infoline" default="!Container(7502).IsUpdating + !$EXP[flix_spotlight_level1] + [!Control.HasFocus(9000) + !Control.HasFocus(9001) + !Control.HasFocus(303)] + !String.StartsWith(ListItem.FolderPath,favourites://)" />
    <definition>
      <control type="grouplist">
        <height>200</height>
        <orientation>horizontal</orientation>
        <usecontrolcoords>true</usecontrolcoords>
        <itemgap>0</itemgap>
        <left>0</left>
        <right>0</right>
        <include content="Object_Info_Line_Label">
          <param name="label" value="$VAR[Label_VideoInfoLine]"/>
          <param name="textcolor" value="main_fg_100"/>
          <param name="font" value="font_tiny_hintlabel"/>
          <param name="divider" value="false"/>
          <param name="visible" value="$PARAM[visible_infoline]"/>
          <param name="autoscroll" value="false"/>
          <param name="width" value="720" />
        </include>
      </control>
    </definition>
  </include>
  <include name="Object_Ratings_Content">
    <param name="directory" default="colorful"/>
    <param name="top" default="530"/>
    <param name="align" default="right"/>
    <definition>
      <control type="grouplist">
        <top>$PARAM[top]</top>
        <left>$PARAM[left]</left>
        <right>12</right>
        <height>48</height>
        <orientation>horizontal</orientation>
        <align>$PARAM[align]</align>
        <itemgap>6</itemgap>
        <usecontrolcoords>true</usecontrolcoords>
        <animation effect="fade" start="100" end="0" time="650" tween="sine" condition="Player.HasVideo + !Skin.HasSetting(DontHideShowcase)">Conditional</animation>
        <control type="image">
          <top>4</top>
          <width>32</width>
          <height>32</height>
          <texture>flags/$PARAM[directory]/ratings/oscar.png</texture>
          <visible>String.Contains(Window(Home).Property(TMDbHelper.ListItem.Awards),Oscar) + String.Contains(Window(Home).Property(TMDbHelper.ListItem.Awards),Won)</visible>
          <visible>Skin.HasSetting(Ratings.Oscars)</visible>
        </control>
        <control type="label">
          <textcolor>dialog_fg_100</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>42</height>
          <align>right</align>
          <font>font27</font>
          <label>$VAR[Label_Oscars,, ]</label>
          <visible>String.Contains(Window(Home).Property(TMDbHelper.ListItem.Awards),Oscar) + String.Contains(Window(Home).Property(TMDbHelper.ListItem.Awards),Won)</visible>
          <visible>Skin.HasSetting(Ratings.Oscars)</visible>
        </control>
        <control type="image">
          <top>6</top>
          <width>32</width>
          <height>32</height>
          <texture>flags/$PARAM[directory]/ratings/trakt.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Trakt_Rating))</visible>
          <visible>Skin.HasSetting(Ratings.Trakt)</visible>
        </control>
        <control type="label">
          <textcolor>dialog_fg_100</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>42</height>
          <align>right</align>
          <font>font27</font>
          <label>$INFO[Window(Home).Property(TMDbHelper.ListItem.Trakt_Rating), , ]</label>
          <visible>true</visible>
          <label>$INFO[Window(Home).Property(TMDbHelper.ListItem.Trakt_Rating), ,% ]</label>
          <visible>!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Trakt_Rating))</visible>
          <visible>Skin.HasSetting(Ratings.Trakt)</visible>
        </control>
        <control type="image">
          <top>6</top>
          <width>32</width>
          <height>32</height>
          <texture>flags/$PARAM[directory]/ratings/tmdb.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.TMDb_Rating))</visible>
          <visible>Skin.HasSetting(Ratings.TheMovieDB)</visible>
        </control>
        <control type="label">
          <textcolor>dialog_fg_100</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>42</height>
          <align>right</align>
          <font>font27</font>
          <label>$INFO[Window(Home).Property(TMDbHelper.ListItem.TMDb_Rating), , ]</label>
          <visible>!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.TMDb_Rating))</visible>
          <visible>Skin.HasSetting(Ratings.TheMovieDB)</visible>
        </control>
        <control type="image">
          <top>6</top>
          <width>32</width>
          <height>32</height>
          <texture>flags/$PARAM[directory]/ratings/metacritic.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Metacritic_Rating))</visible>
          <visible>Skin.HasSetting(Ratings.Metacritic)</visible>
        </control>
        <control type="label">
          <textcolor>dialog_fg_100</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>42</height>
          <align>right</align>
          <font>font27</font>
          <label>$INFO[Window(Home).Property(TMDbHelper.ListItem.Metacritic_Rating), ,% ]</label>
          <visible>!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Metacritic_Rating))</visible>
          <visible>Skin.HasSetting(Ratings.Metacritic)</visible>
        </control>
        <control type="image">
          <top>6</top>
          <width>32</width>
          <height>32</height>
          <texture>flags/$PARAM[directory]/ratings/popcorn.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.RottenTomatoes_UserMeter))</visible>
          <visible>Integer.IsGreater(Window(home).Property(TMDbHelper.ListItem.RottenTomatoes_UserMeter),59)</visible>
          <visible>Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image">
          <top>6</top>
          <width>32</width>
          <height>32</height>
          <texture>flags/$PARAM[directory]/ratings/popcorn_spilt.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.RottenTomatoes_UserMeter))</visible>
          <visible>!Integer.IsGreater(Window(home).Property(TMDbHelper.ListItem.RottenTomatoes_UserMeter),59)</visible>
          <visible>Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="label">
          <textcolor>dialog_fg_100</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>42</height>
          <align>right</align>
          <font>font27</font>
          <label>$INFO[Window(Home).Property(TMDbHelper.ListItem.RottenTomatoes_UserMeter), ,% ]</label>
          <visible>!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.RottenTomatoes_UserMeter))</visible>
          <visible>Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image">
          <top>6</top>
          <width>32</width>
          <height>32</height>
          <texture>flags/$PARAM[directory]/ratings/rtrotten.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.RottenTomatoes_Rating))</visible>
          <visible>Integer.IsGreater(Window(home).Property(TMDbHelper.ListItem.RottenTomatoes_Rating),0) + !Integer.IsGreater(Window(home).Property(TMDbHelper.ListItem.RottenTomatoes_Rating),59)</visible>
          <visible>Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image">
          <top>6</top>
          <width>32</width>
          <height>32</height>
          <texture>flags/$PARAM[directory]/ratings/rtfresh.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.RottenTomatoes_Rating))</visible>
          <visible>Integer.IsGreater(Window(home).Property(TMDbHelper.ListItem.RottenTomatoes_Rating),59) + !Integer.IsGreater(Window(home).Property(TMDbHelper.ListItem.RottenTomatoes_Rating),74)</visible>
          <visible>Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image" description="remove the rtfresh texture line for certified logo">
          <top>6</top>
          <width>32</width>
          <height>32</height>
          <texture>flags/$PARAM[directory]/ratings/rtfresh.png</texture>
          <texture>flags/$PARAM[directory]/ratings/certified.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.RottenTomatoes_Rating))</visible>
          <visible>Integer.IsGreater(Window(home).Property(TMDbHelper.ListItem.RottenTomatoes_Rating),74)</visible>
          <visible>Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="label">
          <textcolor>dialog_fg_100</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>42</height>
          <align>right</align>
          <font>font27</font>
          <label>$INFO[Window(Home).Property(TMDbHelper.ListItem.RottenTomatoes_Rating), ,% ]</label>
          <visible>!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.RottenTomatoes_Rating))</visible>
          <visible>Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image">
          <top>6</top>
          <width>52</width>
          <height>32</height>
          <texture>flags/$PARAM[directory]/ratings/imdb.png</texture>
          <visible>!String.IsEmpty(Window(home).Property(TMDbHelper.ListItem.IMDb_Rating))</visible>
          <visible>Skin.HasSetting(Ratings.IMDB) | Skin.HasSetting(Ratings.IMDB.Votes)</visible>
        </control>
        <control type="label">
          <textcolor>dialog_fg_100</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>42</height>
          <align>right</align>
          <font>font27</font>
          <label>$INFO[Window(home).Property(TMDbHelper.ListItem.IMDb_Rating), ,]</label>
          <visible>!String.IsEmpty(Window(home).Property(TMDbHelper.ListItem.IMDb_Rating))</visible>
          <visible>Skin.HasSetting(Ratings.IMDB)</visible>
        </control>
        <control type="label">
          <textcolor>dialog_fg_100</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>42</height>
          <align>right</align>
          <font>font27</font>
          <label>$INFO[Window(home).Property(TMDbHelper.ListItem.IMDb_Votes), (, $LOCALIZE[205])]</label>
          <visible>!String.IsEmpty(Window(home).Property(TMDbHelper.ListItem.IMDb_Rating))</visible>
          <visible>Skin.HasSetting(Ratings.IMDB.Votes)</visible>
        </control>
        <control type="image">
          <top>6</top>
          <width>52</width>
          <height>32</height>
          <texture>flags/$PARAM[directory]/ratings/imdbtop250.png</texture>
          <visible>!String.IsEmpty(Window(home).Property(TMDbHelper.ListItem.Top250))</visible>
          <visible>Skin.HasSetting(Ratings.Top250)</visible>
        </control>
        <control type="label">
          <textcolor>dialog_fg_100</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>42</height>
          <align>right</align>
          <font>font27</font>
          <label>$INFO[Window(Home).Property(TMDbHelper.ListItem.Top250),#,]</label>
          <visible>Integer.IsGreater(Window(home).Property(TMDbHelper.ListItem.Top250),0)</visible>
          <visible>Skin.HasSetting(Ratings.Top250)</visible>
        </control>
      </control>
    </definition>
  </include>
  <include name="Object_PVR_Icon">
    <param name="bgcolor" default="main_bg"/>
    <param name="fgcolor" default="main_fg"/>
    <param name="width" default="113"/>
    <param name="height" default="113"/>
    <param name="font" default="font13"/>
    <definition>
      <control type="image">
        <top>4</top>
        <right>4</right>
        <left>0</left>
        <bottom>0</bottom>
        <bordersize>20</bordersize>
        <texture>$INFO[ListItem.Icon]</texture>
        <aspectratio aligny="center" align="right">keep</aspectratio>
      </control>
      <control type="image">
        <top>4</top>
        <right>4</right>
        <left>0</left>
        <bottom>0</bottom>
        <bordersize>20</bordersize>
        <texture colordiffuse="main_fg_100">common/circle.png</texture>
        <aspectratio aligny="center" align="right">keep</aspectratio>
        <visible>String.IsEmpty(ListItem.Icon)</visible>
      </control>
      <control type="label">
        <top>4</top>
        <right>4</right>
        <left>0</left>
        <bottom>0</bottom>
        <align>center</align>
        <aligny>center</aligny>
        <textoffsetx>20</textoffsetx>
        <font>$PARAM[font]</font>
        <textcolor>$PARAM[bgcolor]_90</textcolor>
        <selectedcolor>$PARAM[bgcolor]_90</selectedcolor>
        <label>$INFO[ListItem.ChannelNumberLabel]</label>
        <visible>String.IsEmpty(ListItem.Icon)</visible>
      </control>
    </definition>
  </include>
  <include name="Object_Control">
    <control type="$PARAM[type]" id="$PARAM[id]">
      <nested/>
    </control>
  </include>
  <include name="Object_Scrollbars">
    <include content="Object_Scrollbar_Vert">
      <param name="visible" value="Control.IsVisible(50) | Control.IsVisible(55)" />
      <param name="left" value="$PARAM[left]"/>
    </include>
    <include content="Object_Scrollbar_Horz">
        <param name="visible" value="Control.IsVisible(510)" />
    </include>
  </include>
  <include name="Object_Scrollbar_Vert">
    <control type="scrollbar" id="60">
      <onback>50</onback>
      <left>$PARAM[left]</left>
      <width>8</width>
      <top>15</top>
      <bottom>15</bottom>
      <visible>$PARAM[visible]</visible>
      <showonepage>true</showonepage>
      <orientation>vertical</orientation>
      <onright>50</onright>
      <onleft>50</onleft>
      <texturesliderbackground colordiffuse="main_fg_12" border="4">common/white.png</texturesliderbackground>
      <texturesliderbar colordiffuse="main_fg_30" border="4">scrollbar/scrollv.png</texturesliderbar>
      <texturesliderbarfocus colordiffuse="main_fg_100" border="4">scrollbar/scrollv.png</texturesliderbarfocus>
      <animation effect="fade" start="100" end="0" time="400" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
      <visible>![String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557])]</visible>
    </control>

    <control type="button" id="60">
      <visible>$PARAM[visible]</visible>
      <visible>[String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557])]</visible>
      <font />
      <texturefocus />
      <texturenofocus />
      <left>$PARAM[left]</left>
      <width>40</width>
      <top>15</top>
      <bottom>15</bottom>
      <onright>50</onright>
      <onleft>50</onleft>
      <ondown>SetFocus(50)</ondown>
      <ondown>Action(nextletter)</ondown>
      <ondown condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(jumpsms2)</ondown>
      <ondown condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(prevletter)</ondown>
      <ondown condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(prevletter)</ondown>
      <ondown condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(prevletter)</ondown>
      <ondown>SetFocus(60)</ondown>
      <onup>SetFocus(50)</onup>
      <onup>Action(prevletter)</onup>
      <onup condition="!Container.HasPrevious | $EXP[Exp_SortLetterIsNumber]">Action(jumpsms9)</onup>
      <onup condition="!Container.HasPrevious | $EXP[Exp_SortLetterIsNumber]">Action(nextletter)</onup>
      <onup condition="!Container.HasPrevious | $EXP[Exp_SortLetterIsNumber]">Action(nextletter)</onup>
      <onup condition="!Container.HasPrevious | $EXP[Exp_SortLetterIsNumber]">Action(nextletter)</onup>
      <onup>SetFocus(60)</onup>
    </control>

    <control type="grouplist">
      <visible>$PARAM[visible]</visible>
      <top>15</top>
      <bottom>15</bottom>
      <left>$PARAM[left]</left>
      <width>64</width>
      <height>800</height>
      <itemgap>0</itemgap>
      <orientation>vertical</orientation>
      <animation effect="fade" start="100" end="0" time="400" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
      <include>Object_AlphabetNumber</include>
      <include content="Object_AlphabetLetter">
          <param name="label" value="A" />
      </include>
      <include content="Object_AlphabetLetter">
          <param name="label" value="B" />
      </include>
      <include content="Object_AlphabetLetter">
          <param name="label" value="C" />
      </include>
      <include content="Object_AlphabetLetter">
          <param name="label" value="D" />
      </include>
      <include content="Object_AlphabetLetter">
          <param name="label" value="E" />
      </include>
      <include content="Object_AlphabetLetter">
          <param name="label" value="F" />
      </include>
      <include content="Object_AlphabetLetter">
          <param name="label" value="G" />
      </include>
      <include content="Object_AlphabetLetter">
          <param name="label" value="H" />
      </include>
      <include content="Object_AlphabetLetter">
          <param name="label" value="I" />
      </include>
      <include content="Object_AlphabetLetter">
          <param name="label" value="J" />
      </include>
      <include content="Object_AlphabetLetter">
          <param name="label" value="K" />
      </include>
      <include content="Object_AlphabetLetter">
          <param name="label" value="L" />
      </include>
      <include content="Object_AlphabetLetter">
          <param name="label" value="M" />
      </include>
      <include content="Object_AlphabetLetter">
          <param name="label" value="N" />
      </include>
      <animation effect="fade" start="100" end="0" condition="[String.IsEqual(ListItem.SortLetter,N) | String.IsEqual(ListItem.SortLetter,O) | String.IsEqual(ListItem.SortLetter,P) | String.IsEqual(ListItem.SortLetter,Q) | String.IsEqual(ListItem.SortLetter,R) | String.IsEqual(ListItem.SortLetter,S) | String.IsEqual(ListItem.SortLetter,T) | String.IsEqual(ListItem.SortLetter,U) | String.IsEqual(ListItem.SortLetter,V) | String.IsEqual(ListItem.SortLetter,W) | String.IsEqual(ListItem.SortLetter,X) | String.IsEqual(ListItem.SortLetter,Y) | String.IsEqual(ListItem.SortLetter,Z)]">Conditional</animation>
      <visible>[String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557])]</visible>
    </control>

    <control type="grouplist">
      <visible>$PARAM[visible]</visible>
      <top>15</top>
      <bottom>15</bottom>
      <left>$PARAM[left]</left>
      <width>64</width>
      <height>800</height>
      <itemgap>0</itemgap>
      <orientation>vertical</orientation>
      <animation effect="fade" start="100" end="0" time="400" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
      <include content="Object_AlphabetLetter">
          <param name="label" value="L" />
      </include>
      <include content="Object_AlphabetLetter">
          <param name="label" value="M" />
      </include>
      <include content="Object_AlphabetLetter">
          <param name="label" value="N" />
      </include>
      <include content="Object_AlphabetLetter">
          <param name="label" value="O" />
      </include>
      <include content="Object_AlphabetLetter">
          <param name="label" value="P" />
      </include>
      <include content="Object_AlphabetLetter">
          <param name="label" value="Q" />
      </include>
      <include content="Object_AlphabetLetter">
          <param name="label" value="R" />
      </include>
      <include content="Object_AlphabetLetter">
          <param name="label" value="S" />
      </include>
      <include content="Object_AlphabetLetter">
          <param name="label" value="T" />
      </include>
      <include content="Object_AlphabetLetter">
          <param name="label" value="U" />
      </include>
      <include content="Object_AlphabetLetter">
          <param name="label" value="V" />
      </include>
      <include content="Object_AlphabetLetter">
          <param name="label" value="W" />
      </include>
      <include content="Object_AlphabetLetter">
          <param name="label" value="X" />
      </include>
      <include content="Object_AlphabetLetter">
          <param name="label" value="Y" />
      </include>
      <include content="Object_AlphabetLetter">
          <param name="label" value="Z" />
      </include>
      <animation effect="fade" start="100" end="0" condition="![String.IsEqual(ListItem.SortLetter,N) | String.IsEqual(ListItem.SortLetter,O) | String.IsEqual(ListItem.SortLetter,P) | String.IsEqual(ListItem.SortLetter,Q) | String.IsEqual(ListItem.SortLetter,R) | String.IsEqual(ListItem.SortLetter,S) | String.IsEqual(ListItem.SortLetter,T) | String.IsEqual(ListItem.SortLetter,U) | String.IsEqual(ListItem.SortLetter,V) | String.IsEqual(ListItem.SortLetter,W) | String.IsEqual(ListItem.SortLetter,X) | String.IsEqual(ListItem.SortLetter,Y) | String.IsEqual(ListItem.SortLetter,Z)]">Conditional</animation>
      <visible>[String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557])]</visible>
  </control>
</include>
    <include name="Object_AlphabetLetter">
      <control type="label">
        <width>64</width>
        <height>52</height>
        <label>$PARAM[label]</label>
        <align>center</align>
        <aligny>center</aligny>
        <textcolor>main_fg_30</textcolor>
        <font>font_tiny10</font>
        <visible>!String.IsEqual(ListItem.SortLetter,$PARAM[label])</visible>
      </control>
      <control type="label">
        <width>64</width>
        <height>52</height>
        <label>[B]$PARAM[label][/B]</label>
        <align>center</align>
        <aligny>center</aligny>
        <textcolor>main_fg_100</textcolor>
        <font>font_tiny_match</font>
        <visible>String.IsEqual(ListItem.SortLetter,$PARAM[label])</visible>
      </control>
    </include>

    <include name="Object_AlphabetNumber">
      <control type="label">
        <width>64</width>
        <height>52</height>
        <label>#</label>
        <align>center</align>
        <aligny>center</aligny>
        <textcolor>main_fg_30</textcolor>
        <font>font_tiny10</font>
        <visible>!$EXP[Exp_SortLetterIsNumber]</visible>
      </control>
      <control type="label">
        <width>64</width>
        <height>52</height>
        <label>[B]#[/B]</label>
        <align>center</align>
        <aligny>center</aligny>
        <textcolor>main_fg_100</textcolor>
        <font>font_tiny_match</font>
        <visible>$EXP[Exp_SortLetterIsNumber]</visible>
      </control>
  </include>
  <include name="Object_Scrollbar_Horz">
    <control type="scrollbar" id="62">
        <onback>50</onback>
        <height>8</height>
        <left>80</left>
        <right>80</right>
        <width>1680</width>
        <centerbottom>40</centerbottom>
        <showonepage>false</showonepage>
        <orientation>horizontal</orientation>
        <onup>50</onup>
        <visible>$PARAM[visible]</visible>
        <texturesliderbackground colordiffuse="main_fg_12" border="4">common/white.png</texturesliderbackground>
        <texturesliderbar colordiffuse="main_fg_30" border="4">scrollbar/scrollv.png</texturesliderbar>
        <texturesliderbarfocus colordiffuse="main_fg_100" border="4">scrollbar/scrollv.png</texturesliderbarfocus>
        <animation effect="fade" start="100" end="0" time="400" condition="!Control.HasFocus(62)">Conditional</animation>
        <visible>![String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561])]</visible>
        <include>Animation_FadeIn</include>
        <include>Animation_FadeOut</include>
    </control>

    <control type="button" id="62">
        <visible>$PARAM[visible]</visible>
        <visible>[String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561])]</visible>
        <font />
        <texturefocus />
        <texturenofocus />
        <height>40</height>
        <left>80</left>
        <right>80</right>
        <width>1680</width>
        <centerbottom>40</centerbottom>
        <onup>50</onup>
        <onright>SetFocus(50)</onright>
        <onright>Action(nextletter)</onright>
        <onright condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(jumpsms2)</onright>
        <onright condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(prevletter)</onright>
        <onright condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(prevletter)</onright>
        <onright condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(prevletter)</onright>
        <onright>SetFocus(62)</onright>
        <onleft>SetFocus(50)</onleft>
        <onleft>Action(prevletter)</onleft>
        <onleft condition="!Container.HasPrevious | $EXP[Exp_SortLetterIsNumber]">Action(jumpsms9)</onleft>
        <onleft condition="!Container.HasPrevious | $EXP[Exp_SortLetterIsNumber]">Action(nextletter)</onleft>
        <onleft condition="!Container.HasPrevious | $EXP[Exp_SortLetterIsNumber]">Action(nextletter)</onleft>
        <onleft condition="!Container.HasPrevious | $EXP[Exp_SortLetterIsNumber]">Action(nextletter)</onleft>
        <onleft>SetFocus(62)</onleft>
    </control>

    <control type="grouplist">
        <visible>$PARAM[visible]</visible>
        <centerbottom>40</centerbottom>
        <height>52</height>
        <itemgap>0</itemgap>
        <align>center</align>
        <left>80</left>
        <right>80</right>
        <orientation>horizontal</orientation>
        <animation effect="fade" start="100" end="0" time="400" condition="!Control.HasFocus(62)">Conditional</animation>
        <include>Animation_FadeIn</include>
        <include>Animation_FadeOut</include>
        <include>Object_AlphabetNumber</include>
        <include content="Object_AlphabetLetter">
            <param name="label" value="A" />
        </include>
        <include content="Object_AlphabetLetter">
            <param name="label" value="B" />
        </include>
        <include content="Object_AlphabetLetter">
            <param name="label" value="C" />
        </include>
        <include content="Object_AlphabetLetter">
            <param name="label" value="D" />
        </include>
        <include content="Object_AlphabetLetter">
            <param name="label" value="E" />
        </include>
        <include content="Object_AlphabetLetter">
            <param name="label" value="F" />
        </include>
        <include content="Object_AlphabetLetter">
            <param name="label" value="G" />
        </include>
        <include content="Object_AlphabetLetter">
            <param name="label" value="H" />
        </include>
        <include content="Object_AlphabetLetter">
            <param name="label" value="I" />
        </include>
        <include content="Object_AlphabetLetter">
            <param name="label" value="J" />
        </include>
        <include content="Object_AlphabetLetter">
            <param name="label" value="K" />
        </include>
        <include content="Object_AlphabetLetter">
            <param name="label" value="L" />
        </include>
        <include content="Object_AlphabetLetter">
            <param name="label" value="M" />
        </include>
        <include content="Object_AlphabetLetter">
            <param name="label" value="N" />
        </include>
        <include content="Object_AlphabetLetter">
            <param name="label" value="O" />
        </include>
        <include content="Object_AlphabetLetter">
            <param name="label" value="P" />
        </include>
        <include content="Object_AlphabetLetter">
            <param name="label" value="Q" />
        </include>
        <include content="Object_AlphabetLetter">
            <param name="label" value="R" />
        </include>
        <include content="Object_AlphabetLetter">
            <param name="label" value="S" />
        </include>
        <include content="Object_AlphabetLetter">
            <param name="label" value="T" />
        </include>
        <include content="Object_AlphabetLetter">
            <param name="label" value="U" />
        </include>
        <include content="Object_AlphabetLetter">
            <param name="label" value="V" />
        </include>
        <include content="Object_AlphabetLetter">
            <param name="label" value="W" />
        </include>
        <include content="Object_AlphabetLetter">
            <param name="label" value="X" />
        </include>
        <include content="Object_AlphabetLetter">
            <param name="label" value="Y" />
        </include>
        <include content="Object_AlphabetLetter">
            <param name="label" value="Z" />
        </include>
        <visible>[String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561])]</visible>
    </control>
  </include>
</includes>
